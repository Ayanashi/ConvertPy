name: CI - Run script

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:
    inputs:
      script-path:
        description: 'Path to the script to run (relative to repo root)'
        required: false
        default: 'convert.py'
      script-args:
        description: 'Arguments to pass to the script'
        required: false
        default: ''

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.12, 3.11, 3.10]

    env:
      # Usa input workflow_dispatch se esiste, altrimenti fallback a default
      SCRIPT_PATH: ${{ github.event.inputs['script-path'] || 'convert.py' }}
      SCRIPT_ARGS: ${{ github.event.inputs['script-args'] || '' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies (tolerant)
        run: |
          python -m pip install --upgrade pip setuptools wheel
          if [ -f requirements.txt ]; then
            python -m pip install -r requirements.txt || echo "pip install failed, continuing job."
          fi
          if [ -f setup.py ] || [ -f pyproject.toml ]; then
            python -m pip install -e . || echo "editable install failed, continuing job."
          fi

      - name: Run tests or script
        run: |
          if [ -d tests ] || ls *_test.py 1> /dev/null 2>&1 || ls test_*.py 1> /dev/null 2>&1; then
            echo "Detected tests â€” running pytest"
            if ! command -v pytest >/dev/null 2>&1; then
              python -m pip install -U pytest || true
            fi
            pytest -q --maxfail=1
          elif [ -f "${SCRIPT_PATH}" ]; then
            echo "Running script: ${SCRIPT_PATH} ${SCRIPT_ARGS}"
            python "${SCRIPT_PATH}" ${SCRIPT_ARGS}
          else
            echo "No tests found and script '${SCRIPT_PATH}' does not exist."
            ls -la
            exit 1
          fi
