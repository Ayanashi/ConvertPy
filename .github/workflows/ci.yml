name: Python CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"

    - name: Install FFmpeg
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ffmpeg

    - name: Install project dependencies (if present) and tools
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        # Ensure linter and test runner are available
        pip install flake8 pytest pytest-cov

    - name: Lint with flake8
      run: |
        # Remove --exit-zero to make lint failures fail the job
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests with pytest (produce junit and coverage)
      continue-on-error: false
      run: |
        mkdir -p test-results
        pytest -v --junitxml=test-results/junit.xml --cov=./ --cov-report=xml test || pytest_exit=$?
        # Ensure we exit with pytest's exit code if tests failed
        test -z "${pytest_exit:-}" || (echo "pytest failed with code $pytest_exit" && exit $pytest_exit)

    - name: Upload test results artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: test-results/

    # Optional: upload coverage to Codecov (requires CODECOV_TOKEN for private repos)
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v4
    #   with:
    #     files: ./coverage.xml
    #     token: ${{ secrets.CODECOV_TOKEN }}

